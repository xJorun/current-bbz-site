---
export interface Props {
  href: string;
  variant?: 'primary' | 'secondary';
  external?: boolean;
}

const { href, variant = 'primary', external = href.startsWith('http') } = Astro.props;
---

<a 
  href={href} 
  class={`btn btn-${variant}`}
  target={external ? '_blank' : undefined}
  rel={external ? 'noopener noreferrer' : undefined}
>
  <span class="btn-content">
    <slot />
  </span>
</a>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: relative;
    padding: 1rem 2.5rem;
    font-weight: 600;
    text-decoration: none;
    border-radius: 0.5rem;
    transition: all 0.3s;
    overflow: hidden;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-size: 0.875rem;
  }

  .btn-content {
    position: relative;
    z-index: 2;
  }

  .btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s;
  }

  .btn:hover::before {
    transform: translateX(100%);
  }

  .btn-primary {
    background: var(--orange);
    color: var(--white);
    box-shadow: 0 4px 15px rgba(255, 69, 0, 0.3);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 25px rgba(255, 69, 0, 0.5);
  }

  .btn-secondary {
    background: transparent;
    color: var(--white);
    border: 2px solid var(--white);
  }

  .btn-secondary:hover {
    background: var(--white);
    color: var(--black);
    transform: translateY(-2px);
  }

  .btn:active {
    transform: translateY(0);
  }
</style>